logging:
    enabled: true
  # logging.level:
  # Debug, Info, Warn, Error, Fatal, Panic : Note that the level is case-sensitive and cumulative #
  # (i.e. if you set it to "Error" it will log all errors, fatal and panic)
    level: Info
    output: "file" # file or stdout if file is used, the logfile must be set with logfile: "/var/log/pvs.log"
    logfile: "/var/log/pvs.log"

firewall:
  enabled: true
# If you only have one interface then the firewall will not block network traffic when the vpn rotates or disconnects
  private_network: "192.168.1.0/24"
  private_network_adaptor: "eth1"

monitoring:
  process_restart_limit: 3

openvpn:
    config_dir: "/usr/bin/pvs/vpn_configs"
    rotate_minutes: 15
    # PVS will monitor the VPN Process to ensure it is always running however,
    # OpenVPN connections can sometimes stall while remaining active for this reason we have introduced a network check
    # in the form of a dns check, this is the interval in minutes that the dns check will be performed
    # if the dns check fails the VPN will be restarted, this value should be less than the rotate_minutes value
    dns_check_minutes: 1
    # preferred_configs:


    # The following command will return a list of host addresses that have failed to resolve, this can happen when the VPN provider no longer supports that URL and the config file is out of date.
    # You should run this if you experience issues with the VPN not connecting and then remove the offending config files from the preferred_configs list.
    #
    # cat /var/log/pvs.log | grep "Cannot resolve host address:" | sed 's/.*Cannot resolve host address: \([^ ]*\).*/\1/' | sort | uniq -c | sort -nr